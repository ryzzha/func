#include "imports/stdlib.fc";

() recv_internal(int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if(in_msg_body.slice_empty?()) {
        return ();
    }
    int secret_code = in_msg_body~load_uint(32);

    if (secret_code == 12345) {
        set_data(begin_cell().store_uint(0, 64).store_uint(0, 32).end_cell());
    }

    int operation = in_msg_body~load_uint(1);

    int n = in_msg_body~load_uint(32);

    slice ds = get_data().begin_parse();
    int total = ds~load_uint(64);
    int operations_count = ds~load_uint(32);

    if(operation == 1) {
        total += n;
    } elseif(operation == 0) { 
        total -= n;
    }

    operations_count += 1;

    set_data(begin_cell().store_uint(total, 64).store_uint(operations_count, 32).end_cell());
}

int get_total() method_id {
    slice ds = get_data().begin_parse();
    int total = ds~load_uint(64);

    return total;
}

int get_operations_count() method_id {
    slice ds = get_data().begin_parse();
    (slice upd_ds, int total) = ds.load_uint(64);
    int operations_count = upd_ds~load_uint(32);

    return operations_count;
}

int is_total_even() {
    slice ds = get_data().begin_parse();
    int total = ds~load_uint(64);

    if(total % 2 == 0) {
        return 1;
    } else {
        return 0;
    }
}