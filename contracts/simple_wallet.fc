#include "imports/stdlib.fc";

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    ;;
}

() recv_external(slice in_msg) impure {
    slice signature = in_msg~load_bits(512);
    slice cs = in_msg;  
    (int msg_seqno, int valid_until) = (cs~load_uint(32), cs~load_uint(32));
    throw_if(35, valid_until <= now());
    slice ds = get_data().begin_parse();
    (int stored_seqno, slice public_key) = (ds~load_uint(32), ds~load_uint(256));
    ds~end_parse();
    throw_if(33, msg_seqno == stored_seqno);
    throw_if(34, check_signature(slice_hash(in_msg),signature,public_key));
    accept_message();
    cs~impure_touch();
    while (cs.slice_refs()) {
        int mode = cs~load_uint(8);
        send_raw_message(cs~load_ref(),mode);
    }
    cs~end_parse();
    set_data(begin_cell().store_uint(stored_seqno + 1, 32).store_uint(public_key, 256).end_cell());
}
